/*.gif
/*.gif/
/*.html
/*.jsp
/*.jsp/
/*.jws
/*.shtml/
/AdminCaptureRootCA
/AdminClients
/AdminConnections
/AdminEvents
/AdminJDBC
/AdminLicense
/AdminMain
/AdminProps
/AdminRealm
/AdminThreads
/AdminVersion
/BizTalkServer
/Bootstrap
/Certificate
/Classpath/
/ConsoleHelp/
/ConsoleHelp
/DefaultWebApp
/HTTPClntClose
/HTTPClntLogin
/HTTPClntRecv
/HTTPClntSend
/LogfileSearch
/LogfileTail
/Login.jsp
/MANIFEST.MF
/META-INF
/SimpappServlet
/StockServlet
/T3AdminMain
/UniversityServlet
/WEB-INF
/WEB-INF./web.xml
/WEB-INF/web.xml
/WLDummyInitJVMIDs
/WebServiceServlet
/_tmp_war
/_tmp_war_DefaultWebApp
/a2e2gp2r2/x.jsp
/actions
/admin/login.do
/applet
/applications
/authenticatedy
/bea_wls_internal/classes/
/bea_wls_internal/classes/
/bea_wls_internal/WebServiceServlet
/bea_wls_internal/getior
/bea_wls_internal
/bea_wls_internal/HTTPClntSend
/bea_wls_internal/HTTPClntRecv
/bea_wls_internal/iiop/ClientSend
/bea_wls_internal/iiop/ClientRecv
/bea_wls_internal/iiop/ClientLogin
/bea_wls_internal/WLDummyInitJVMIDs
/bea_wls_internal/a2e2gp2r2/x.jsp
/bea_wls_internal/psquare/x.jsp
/bea_wls_internal/iiop/ClientClose
/beanManaged
/certificate
/classes
/classes/
/com
/common
/config
/console
/cookies
/default
/docs51
/domain
/drp-exports
/drp-publish
/dummy
/e2ePortalProject/Login.portal
/ejb
/ejbSimpappServlet
/error
/examplesWebApp/EJBeanManagedClient.jsp
/examplesWebApp/WebservicesEJB.jsp
/examplesWebApp/OrderParser.jsp?xmlfile=C:/bea/weblogic81/samples/server/examples/src/examples/xml/orderParser/order.xml
/examplesWebApp/index.jsp
/examplesWebApp/InteractiveQuery.jsp
/examplesWebApp/SessionServlet
/fault
/file
/file/
/fileRealm
/fileRealm.properties
/getior
/graphics
/helloKona
/helloWorld
/iiop/ClientClose
/iiop/ClientRecv
/iiop/ClientLogin
/iiop/ClientSend
/images
/index
/index.jsp
/internal
/jmssender
/jmstrader
/jspbuild
/jwsdir
/login.jsp
/manifest.mf
/mapping
/mydomain
/myservlet
/page
/patient/login.do
/patient/register.do
/phone
/physican/login.do
/portalAppAdmin/login.jsp
/properties
/proxy
/psquare/x.jsp
/public_html
/servlet
/servletimages
/servlets/
/session
/simpapp
/simple
/simpleFormServlet
/snoop
/survey
/system
/taglib-uri
/uddi
/uddi/uddilistener
/uddiexplorer
/uddilistener
/utils
/web
/web.xml
/weblogic
/weblogic.properties
/weblogic.xml
/webservice
/webshare
/wl_management_internal2/FileDistribution
/wl_management_internal2/Bootstrap
/wl_management_internal2/Admin
/wl_management_internal2/wl_management
/wl_management_internal1/LogfileTail
/wl_management_internal1/LogfileSearch
/wl_management_internal1
/wl_management
/wl_management_internal2
/wliconsole
/wlserver
