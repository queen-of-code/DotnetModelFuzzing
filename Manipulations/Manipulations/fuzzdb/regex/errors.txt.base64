&lt;/font&gt;&lt;font face="Arial" size=2&gt;
A syntax error has occurred
Active Server Pages error
ADODB.Field error
An illegal character has been found in the statement
An unexpected token "END-OF-STATEMENT" was found
ASP.NET is configured to show verbose error messages
ASP.NET_SessionId
Can't connect to local
CLI Driver
Custom Error Message
data source=
database error
DB2 Driver
DB2 Error
DB2 ODBC
detected an internal error
detected an internal error [IBM][CLI Driver][DB2/6000]
Died at
Disallowed Parent Path
error
Error converting data type varchar to numeric
Error Diagnostic Information
Error Message : Error loading required libraries.
Error Report
Fatal error
include_path
Incorrect syntax near
Index of
Internal Server Error
Invalid Path Character
Invalid procedure call or argument
invalid query
Invision Power Board Database Error
is not allowed to access
JDBC Driver
JDBC Error
JDBC MySQL
JDBC Oracle
JDBC SQL
line
Microsoft OLE DB Provider for ODBC Drivers
Microsoft VBScript compilation error
Microsoft VBScript error
missing expression
mix of collations
MySQL Driver
mysql error
MySQL Error
mySQL error with query
MySQL ODBC
ODBC DB2
ODBC Driver
ODBC Error
ODBC Microsoft Access
ODBC Oracle
ODBC SQL
ODBC SQL Server
OLE/DB provider returned message
on line
on MySQL result index
ORA-0
ORA-1
Oracle DB2
Oracle Driver
Oracle Error
Oracle ODBC
Parent Directory
Permission denied: 'GetObject'
PHP Error
PHP Parse error
PHP Warning
PostgreSQL query failed: ERROR: parser: parse error
server at
server object error
SQL command not properly ended
SQL Server Driver
SQL Server Driver][SQL Server
SQLException
supplied argument is not a valid MySQL result resource
Supplied argument is not a valid PostgreSQL result
Syntax error in query expression
The error occurred in
The script whose uid is
Type mismatch
Unable to jump to row
Unclosed quotation mark before the character string
unexpected end of SQL command
unexpected error
Unterminated string constant
Warning: Cannot modify header information - headers already sent
Warning: mysql_query
Warning: mysql_query()
Warning: pg_connect
Warning: pg_connect(): Unable to connect to PostgreSQL server: FATAL
Warning: Supplied argument is not a valid File-Handle resource in
You have an error in your SQL syntax near
