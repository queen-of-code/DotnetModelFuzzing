# This file needs some help
Oracle,3,BRIO_ADMIN,BRIO_ADMIN,EB50644BE27DF70B,BRIO_ADMIN is an account of a 3rd party product.
Oracle,3,BRUGERNAVN,ADGANGSKODE,2F11631B6B4E0B6F,9iR2 documentation
Oracle,3,BRUKERNAVN,PASSWORD,652C49CDF955F83A,9iR2 documenation
Oracle,2,BSC,BSC,EC481FD7DCE6366A,BSC is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,BUG_REPORTS,BUG_REPORTS,E9473A88A4DD31F2,From a book
Oracle,3,CALVIN,HOBBES,34200F94830271A3,CALVIN is an account to demonstrate AOLServer. It should not exist in a production environment.
Oracle,3,CATALOG,CATALOG,397129246919E8DA,CATALOG is an account of a 3rd party product.
Oracle,2,CCT,CCT,C6AF8FCA0B51B32F,CCT is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,CDEMO82,CDEMO82,7299A5E2A5A05820,This is a training account. It should not be available in a production environment.
Oracle,3,CDEMO82,CDEMO83,67B891F114BE3AEB,This is a training account. It should not be available in a production environment.
Oracle,3,CDEMO82,UNKNOWN,73EAE7C39B42EA15,This is a training account. It should not be available in a production environment.
Oracle,3,CDEMOCOR,CDEMOCOR,3A34F0B26B951F3F,This is a training account. It should not be available in a production environment.
Oracle,3,CDEMORID,CDEMORID,E39CEFE64B73B308,This is a training account. It should not be available in a production environment.
Oracle,3,CDEMOUCB,CDEMOUCB,CEAE780F25D556F8,This is a training account. It should not be available in a production environment.
Oracle,3,CDOUGLAS,CDOUGLAS,C35109FE764ED61E,CDOUGLAS is a schema owner of  Workflow Iasdb
Oracle,2,CE,CE,E7FDFE26A524FE39,CE is a schema account from Oracle Applications. Default it has several ANY privs, amongst which ALTER ANY PROCEDURE.
Oracle,3,CENTRA,CENTRA,63BF5FFE5E3EA16D,CENTRA is an account that presumably manages Centra application software.
Oracle,3,CENTRAL,CENTRAL,A98B26E2F65CA4D3,CENTRAL is an administrative account for Quest Central(?).
Oracle,3,CIDS,CIDS,AA71234EF06CE6B3,CIDS is an account for Cerberus Intrusion Detection System.
Oracle,3,CIS,CIS,7653EBAF048F0A10,CIS is an account for dbengine, at interface from CIS between Internet and several database software.
Oracle,3,CIS,ZWERG,AA2602921607EE84,CIS is an account for dbengine, at interface from CIS between Internet and several database software.
Oracle,3,CISINFO,CISINFO,3AA26FC267C5F577,CISINFO is an account for dbengine, at interface from CIS between Internet and several database software.
Oracle,3,CISINFO,ZWERG,BEA52A368C31B86F,CISINFO is an account for dbengine, at interface from CIS between Internet and several database software.
Oracle,4,CLARK,CLOTH,7AAFE7D01511D73F,This is a training account. It should not be available in a production environment.
Oracle,3,CLKANA,<UNKNOWN>,,CLKANA is an account for Oracle Clickstream Intelligence.
Oracle,3,CLKRT,<UNKNOWN>,,CLKRT is an account for Oracle Clickstream Intelligence.
Oracle,2,CN,CN,73F284637A54777D,CN is a schema account from Oracle Applications. Default it has several ANY privs, amongst which ALTER ANY PROCEDURE.
Oracle,1,COMPANY,COMPANY,402B659C15EAF6CB,COMPANY is an account with DBA privileges, which allow to read, change and destroy all data in your database.
Oracle,3,COMPIERE,COMPIERE,E3D0DCF4B4DBE626,COMPIERE is an account for the application Compiere.
Oracle,3,CQSCHEMAUSER,PASSWORD,04071E7EDEB2F5CC,CQSCHEMAUSER is a schema account of a 3rd party product.
Oracle,3,CQUSERDBUSER,PASSWORD,0273F484CD3F44B7,CQUSERDBUSER is a user account of a 3rd party product.
Oracle,2,CRP,CRP,F165BDE5462AD557,CRP is a schema account from Oracle Applications. Default it has several ANY privs, amongst which ALTER ANY PROCEDURE.
Oracle,2,CS,CS,DB78866145D4E1C3,CS is a schema account from Oracle Applications. Default it has several ANY privs, amongst which ALTER ANY PROCEDURE.
Oracle,2,CSC,CSC,EDECA9762A8C79CD,CSC is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,CSD,CSD,144441CEBAFC91CF,CSD is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,CSE,CSE,D8CC61E8F42537DA,Oracle Applications
Oracle,2,CSF,CSF,684E28B3C899D42C,CSF is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,CSI,CSI,71C2B12C28B79294,Oracle Applications
Oracle,3,CSL,CSL,C4D7FE062EFB85AB,Oracle Applications
Oracle,3,CSMIG,CSMIG,09B4BB013FBD0D65,CSMIG is an account for Character Set Migrations.
Oracle,2,CSP,CSP,5746C5E077719DB4,CSP is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,CSR,CSR,0E0F7C1B1FE3FA32,CSR is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,CSS,CSS,3C6B8C73DDC6B04F,CSS is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,CTXDEMO,CTXDEMO,CB6B5E9D9672FE89,CTXDEMO is a demonstration account of Oracle Context/Oracle Text.
Oracle,1,CTXSYS,<UNKNOWN>,,CTXSYS (Oracle Text/Intermedia Text/Context option) is an account with DBA privileges and therefor allows to read, change and destroy all data in your database.
Oracle,1,CTXSYS,CHANGE_ON_INSTALL,71E687F036AD56E5,CTXSYS (Oracle Text/Intermedia Text/Context option) is an account with DBA privileges and therefor allows to read, change and destroy all data in your database.
Oracle,1,CTXSYS,CTXSYS,24ABAB8B06281B4C,CTXSYS (Oracle Text/Intermedia Text/Context option) is an account with DBA privileges and therefor allows to read, change and destroy all data in your database.
Oracle,1,CTXSYS,UNKNOWN,A13C035631643BA0,CTXSYS (Oracle Text/Intermedia Text/Context option) is an account with DBA privileges and therefor allows to read, change and destroy all data in your database.
Oracle,2,CUA,CUA,CB7B2E6FFDD7976F,CUA is a schema account from Oracle Applications. Default it has several ANY privs, amongst which ALTER ANY PROCEDURE.
Oracle,2,CUE,CUE,A219FE4CA25023AA,CUE is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,CUF,CUF,82959A9BD2D51297,CUF is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,CUG,CUG,21FBCADAEAFCC489,Oracle Applications
Oracle,2,CUI,CUI,AD7862E01FA80912,CUI is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,CUN,CUN,41C2D31F3C85A79D,CUN is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,CUP,CUP,C03082CD3B13EC42,CUP is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,CUS,CUS,00A12CC6EBF8EDB8,CUS is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,CZ,CZ,9B667E9C5A0D21A6,CZ is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,DBI,MUMBLEFRATZ,D8FF6ECEF4C50809,
Oracle,3,HR,<UNKNOWN>,33EBE1C63D5B7FEF,This is a training account. It should not be available in a production environment.
Oracle,3,HR,CHANGE_ON_INSTALL,6399F3B38EDF3288,This is a training account. It should not be available in a production environment.
Oracle,3,HR,HR,4C6D73C3E8B0F0DA,This is a training account. It should not be available in a production environment.
Oracle,2,HRI,HRI,49A3A09B8FC291D0,HRI is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,HVST,HVST,5787B0D15766ADFD,CA Harvest
Oracle,2,HXC,HXC,4CEA0BF02214DA55,HXC is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,HXT,HXT,169018EB8E2C4A77,HXT is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,IBA,IBA,0BD475D5BF449C63,IBA is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,IBE,IBE,9D41D2B3DD095227,IBE is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,IBP,IBP,840267B7BD30C82E,IBP is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,IBU,IBU,0AD9ABABC74B3057,IBU is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,IBY,IBY,F483A48F6A8C51EC,IBY is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,ICDBOWN,ICDBOWN,76B8D54A74465BB4,ICDBOWN is the owner of BEA eLink Business Process Engine.
Oracle,2,ICX,ICX,7766E887AF4DCC46,ICX is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,IDEMO_USER,IDEMO_USER,739F5BC33AC03043,
Oracle,2,IEB,IEB,A695699F0F71C300,IEB is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,IEC,IEC,CA39F929AF0A2DEC,Oracle Applications
Oracle,2,IEM,IEM,37EF7B2DD17279B5,IEM is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,IEO,IEO,E93196E9196653F1,IEO is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,IES,IES,30802533ADACFE14,IES is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,IEU,IEU,5D0E790B9E882230,IEU is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,IEX,IEX,6CC978F56D21258D,IEX is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,IFSSYS,IFSSYS,1DF0D45B58E72097,IFSSYS is an account belonging to Oracle Internet File System.
Oracle,2,IGC,IGC,D33CEB8277F25346,IGC is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,IGF,IGF,1740079EFF46AB81,IGF is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,IGI,IGI,8C69D50E9D92B9D0,IGI is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,IGS,IGS,DAF602231281B5AC,IGS is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,IGW,IGW,B39565F4E3CF744B,IGW is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,IMAGEUSER,IMAGEUSER,E079BF5E433F0B89,IMAGEUSER is an account of an unknown 3rd party product.
Oracle,3,IMC,IMC,C7D0B9CDE0B42C73,Oracle Applications
Oracle,3,IMEDIA,IMEDIA,8FB1DC9A6F8CE827,IMEDIA is the schema account of the Intermedia option.
Oracle,3,IMT,IMT,E4AAF998653C9A72,Oracle Applications
Oracle,3,#INTERNAL,ORACLE,87DADF57B623B777,
Oracle,3,#INTERNAL,SYS_STNT,38379FC3621F7DA2,
Oracle,3,INTERNAL,ORACLE,AB27B53EDC5FEF41,
Oracle,3,INTERNAL,SYS_STNT,E0BF7F3DDE682D3B,
Oracle,2,INV,INV,ACEAB015589CF4BC,INV is a schema account from Oracle Applications. Default it has several ANY privs, amongst which ALTER ANY PROCEDURE.
Oracle,2,IPA,IPA,EB265A08759A15B4,IPA is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,IPD,IPD,066A2E3072C1F2F3,IPD is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,IPLANET,IPLANET,7404A12072F4E5E8,IPLANET is an account belonging to iPlanet (now called Java Enterprise System).
Oracle,2,ISC,ISC,373F527DC0CFAE98,ISC is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,ITG,ITG,D90F98746B68E6CA,ITG is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,JA,JA,9AC2B58153C23F3D,JA is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,JAKE,PASSWO4,1CE0B71B4A34904B,JAKE is an account to demonstrate AOLServer. It should not exist in a production environment.
Oracle,2,JE,JE,FBB3209FD6280E69,JE is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,JG,JG,37A99698752A1CF1,JG is a schema account from Oracle Applications. Default it has several ANY privs, amongst which ALTER ANY PROCEDURE.
Oracle,3,JILL,PASSWO2,D89D6F9EB78FC841,JILL is an account to demonstrate AOLServer. It should not exist in a production environment.
Oracle,2,JL ,JL ,489B61E488094A8D,JL is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,JMUSER,JMUSER,063BA85BF749DF8E,JMUSER is the schema account of the General Ledger module of the Oracle E-Business suite.
Oracle,3,JOHN,JOHN,29ED3FDC733DC86D,Book
Oracle,3,JONES,STEEL,B9E99443032F059D,This is a training account. It should not be available in a production environment.
Oracle,2,JTF,JTF,5C5F6FC2EBB94124,JTF is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,JTM,JTM,6D79A2259D5B4B5A,Oracle Applications
Oracle,3,JTS,JTS,4087EE6EB7F9CD7C,Oracle Applications
Oracle,3,JWARD,AIROPLANE,CF9CB787BD98DA7F,9iR2 documenation
Oracle,3,KWALKER,KWALKER,AD0D93891AEB26D2,KWALKER is a schema owner of  Workflow Iasdb
Oracle,3,L2LDEMO,L2LDEMO,0A6B2DF907484CEE,
Oracle,3,LBACSYS,LBACSYS,AC9700FD3F1410EB,LBACSYS is an management account of Oracle Label Security. It allows to change security settings for Oracle Label Security.
Oracle,3,LIBRARIAN,SHELVES,11E0654A7068559C,LIBRARIAN is an account that possibly belongs to ACD/Web Librarian, software targeted at chemists and analysts.
Oracle,3,MANPROD,MANPROD,F0EB74546E22E94D,
Oracle,3,MARK,PASSWO3,F7101600ACABCD74,MARK is an account to demonstrate AOLServer. It should not exist in a production environment.
Oracle,3,MASCARM,MANAGER,4EA68D0DDE8AAC6B,
Oracle,3,MASTER,PASSWORD,9C4F452058285A74,
Oracle,3,MDDATA,MDDATA,DF02A496267DEE66,10g
Oracle,3,MDDEMO,MDDEMO,46DFFB4D08C33739,
Oracle,3,MDDEMO_CLERK,CLERK,564F871D61369A39,MDDEMO_CLERK is a user account belonging to Oracle Metadata API.
Oracle,3,MDDEMO_CLERK,MGR,E5288E225588D11F,
Oracle,3,MDDEMO_MGR,MDDEMO_MGR,2E175141BEE66FF6,MDDEMO_MGR is an administration account for to Oracle Metadata API.
Oracle,1,MDSYS,MDSYS,72979A94BAD2AF80,The account MDSYS (Oracle Spatial administrator) has DBA-like privileges, which allow to read, change and destroy all data in your database.
Oracle,2,ME,ME,E5436F7169B29E4D,ME is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,MFG,MFG,FC1B0DD35E790847,MFG is a schema account from Oracle Applications. Default it has several ANY privs, amongst which ALTER ANY PROCEDURE.
Oracle,3,MGR,MGR,9D1F407F3A05BDD9,
Oracle,3,MGWUSER,MGWUSER,EA514DD74D7DE14C,10g
Oracle,3,MIGRATE,MIGRATE,5A88CE52084E9700,
Oracle,3,MILLER,MILLER,D0EFCD03C95DF106,
Oracle,3,MMO2,MMO2,AE128772645F6709,
Oracle,3,MMO2,MMO3,A0E2085176E05C85,
Oracle,3,MMO2,UNKNOWN,62876B0382D5B550,
Oracle,3,MODTEST,YES,BBFF58334CDEF86D,
Oracle,3,MOREAU,MOREAU,CF5A081E7585936B,
Oracle,2,MRP,MRP,B45D4DF02D4E0C85,MRP is a schema account from Oracle Applications. Default it has several ANY privs, amongst which ALTER ANY PROCEDURE.
Oracle,2,MSC,MSC,89A8C104725367B2,MSC is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,MSD,MSD,6A29482069E23675,MSD is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,MSO,MSO,3BAA3289DB35813C,MSO is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,MSR,MSR,C9D53D00FE77D813,MSR is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,MTS_USER,MTS_PASSWORD,E462DB4671A51CD4,
Oracle,3,MTSSYS,MTSSYS,6465913FF5FF1831,MTSSYS is an account for Microsoft Transaction Server support.
Oracle,2,MWA,MWA,1E2F06BE2A1D41A6,MWA is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,MXAGENT,MXAGENT,C5F0512A64EB0E7F,
Oracle,3,NAMES,NAMES,9B95D28A979CC5C4,
Oracle,3,NEOTIX_SYS,NEOTIX_SYS,05BFA7FF86D6EB32,
Oracle,3,NNEUL,NNEULPASS,4782D68D42792139,NNEUL is an account of  Computer and Information Services from the University of Missouri-Rolla.
Oracle,3,NOM_UTILISATEUR,MOT_DE_PASSE,FD621020564A4978,9iR2 documenation
Oracle,3,NOMEUTENTE,PASSWORD,8A43574EFB1C71C7,9iR2 documenation
Oracle,3,NOME_UTILIZADOR,SENHA,71452E4797DF917B,9iR2 documenation
Oracle,3,NUME_UTILIZATOR,PAROL,73A3AC32826558AE,9iR2 documenation
Oracle,3,OAIHUB902,<UNKNOWN>,,OAIHUB902 is an account of Oracle 9iAS InterConnect (OAI).
Oracle,3,OAS_PUBLIC,OAS_PUBLIC,A8116DB6E84FA95D,OAS_PUBLIC is the schema account of older versions of Oracle Webserver.
Oracle,3,OAS_PUBLIC,<UNKNOWN>,9300C0977D7DC75E,
Oracle,3,OCITEST,OCITEST,C09011CB0205B347,
Oracle,3,OCM_DB_ADMIN,<UNKNOWN>,,OCM_DB_ADMIN is an administrative account of Oracle9iAS Certificate Manager (OCM).
Oracle,3,OCM_DB_ADMIN,OCM_DB_ADMIN,2C3A5DEF1EE57E92,OCM_DB_ADMIN is an administrative account of Oracle9iAS Certificate Manager (OCM).
Oracle,3,ODM,ODM,C252E8FA117AF049,
Oracle,3,ODM_MTR,MTRPW,A7A32CD03D3CE8D5,
Oracle,3,ODS,ODS,89804494ADFC71BC,ODS is the schema of Oracle Internet Directory metadata.
Oracle,3,ODS_SERVER,ODS_SERVER,C6E799A949471F57,ODS_SERVER is an administrative account for of Oracle Internet Directory metadata.
Oracle,3,ODSCOMMON,ODSCOMMON,59BBED977430C1A8,ODSCOMMON is a user with acces to Oracle Internet Directory.
Oracle,3,OE,CHANGE_ON_INSTALL,9C30855E7E0CB02D,This is a training account. It should not be available in a production environment.
Oracle,3,OE,UNKNOWN,62FADF01C4DC1ED4,
Oracle,2,OE,OE,D1A2DFC623FDA40A,OE is a schema account from Oracle Applications. Default it has several ANY privs, amongst which ALTER ANY PROCEDURE.
Oracle,3,OEM_REPOSITORY,<UNKNOWN>,1FF89109F7A16FEF,OEM_REPOSITORY is the schema owner of Oracle Enterprise Managers Repository.
Oracle,3,OEMADM,OEMADM,9DCE98CCF541AAE6,
Oracle,3,OEMREP,OEMREP,7BB2F629772BF2E5,
Oracle,3,OKB,OKB,A01A5F0698FC9E31,Oracle Applications
Oracle,2,OKC,OKC,31C1DDF4D5D63FE6,OKC is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,OKE,OKE,B7C1BB95646C16FE,OKE is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,OKI,OKI,991C817E5FD0F35A,Oracle Applications
Oracle,3,OKO,OKO,6E204632EC7CA65D,Oracle Applications
Oracle,2,OKR,OKR,BB0E28666845FCDC,OKR is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,OKS,OKS,C2B4C76AB8257DF5,OKS is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,OKX,OKX,F9FDEB0DE52F5D6B,OKX is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,OLAPDBA,OLAPDBA,1AF71599EDACFB00,OLAPDBA is an administrative account for the OLAP Services option.
Oracle,3,OLAPSVR,INSTANCE,AF52CFD036E8F425,OLAPSVR is an administrative account for the OLAP Services option.
Oracle,3,OLAPSVR,OLAPSVR,3B3F6DB781927D0F,OLAPSVR is an administrative account for the OLAP Services option.
Oracle,3,OLAPSYS,MANAGER,3FB8EF9DB538647C,OLAPSYS is an administrative account for the OLAP Services option.
Oracle,3,OLAPSYS,OLAPSYS,C1510E7AC8F0D90D,OLAPSYS is an administrative account for the OLAP Services option.
Oracle,3,OMWB_EMULATION,ORACLE,54A85D2A0AB8D865,
Oracle,2,ONT,ONT,9E3C81574654100A,ONT is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,OO,OO,2AB9032E4483FAFC,
Oracle,3,OPENSPIRIT,OPENSPIRIT,D664AAB21CE86FD2,
Oracle,2,OPI,OPI,1BF23812A0AEEDA0,OPI is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,ORACACHE,<UNKNOWN>,,
Oracle,3,ORACACHE,ORACACHE,5A4EEC421DE68DDD,
Oracle,3,ORACLE,ORACLE,38E38619A12E0257,
Oracle,3,ORADBA,ORADBAPASS,C37E732953A8ABDB,ORADBA is a DBA account of Computer and Information Services from the University of Missouri-Rolla.
Oracle,3,ORANGE,<UNKNOWN>,3D9B7E34A4F7D4E9,OR Solutions
Oracle,3,ORAPROBE,ORAPROBE,2E3EA470A4CA2D94,User used to execute default password check scripts
Oracle,3,ORAREGSYS,ORAREGSYS,28D778112C63CB15,
Oracle,3,ORASSO,ORASSO,F3701A008AA578CF,ORASSO is the schema of Oracle9iAS Single Sign-On.
Oracle,3,ORASSO_DS,ORASSO_DS,17DC8E02BC75C141,ORASSO_DS is an account belonging to Oracle9iAS Single Sign-On.
Oracle,3,ORASSO_PA,ORASSO_PA,133F8D161296CB8F,ORASSO_PA is an account belonging to Oracle9iAS Single Sign-On.
Oracle,3,ORASSO_PS,ORASSO_PS,63BB534256053305,ORASSO_PS is an account belonging to Oracle9iAS Single Sign-On.
Oracle,3,ORASSO_PUBLIC,ORASSO_PUBLIC,C6EED68A8F75F5D3,ORASSO_PUBLIC is a public account for Oracle9iAS Single Sign-On.
Oracle,3,ORASTAT,ORASTAT,6102BAE530DD4B95,
Oracle,3,ORCLADMIN,WELCOME,7C0BE475D580FBA2,n/a
Oracle,3,ORDCOMMON,ORDCOMMON,9B616F5489F90AD7,
Oracle,3,DATA_SCHEMA,LASKJDF098KSDAF09,5ECB30FD1A71CC54,
Oracle,2,DBSNMP,DBSNMP,E066D214D5421CCC,DBSNMP is an account for the Oracle Intelligent Agent. Under certain circumstances it allows to read passwords from memory.
Oracle,3,DBVISION,DBVISION,F74F7EF36A124931,DBVISION is an administrative account of Platinum DBVision.
Oracle,3,DCM,<UNKNOWN>,,DCM is an administrative account of Oracle 9iAS Distributed Configuration Manager.
Oracle,3,DDIC,199220706,4F9FFB093F909574,This is a SAP application user ID.
Oracle,3,DEMO,DEMO,4646116A123897CF,DEMO is a commonly used name for demonstration accounts. This should not exist in a production environment.
Oracle,3,DEMO8,DEMO8,0E7260738FDFD678,DEMO8 is some kind of demonstration account.
Oracle,3,DEMO9,DEMO9,EE02531A80D998CA,DEMO9 is some kind of demonstration account.
Oracle,3,DES,DES,ABFEC5AC2274E54D,DES is a common name for a Oracle Designer account.
Oracle,3,DES2K,DES2K,611E7A73EC4B425A,DES2K is an account of Oracle Designer 2000.
Oracle,3,DEV2000_DEMOS,DEV2000_DEMOS,18A0C8BD6B13BEE2,DEV2000_DEMOS is a demonstration account for Oracle Developer.
Oracle,3,DIANE,PASSWO1,46DC27700F2ADE28,DIANE is an account to demonstrate AOLServer. It should not exist in a production environment.
Oracle,2,DIP,DIP,CE4A36B8E06CA59C,10g
Oracle,2,DISCOVERER_ADMIN,DISCOVERER_ADMIN,5C1AED4D1AADAA4C,
Oracle,3,DISCOVERER5,<UNKNOWN>,,DISCOVERER5 is an administrative account of Oracle9iAS Discoverer.
Oracle,3,DMSYS,DMSYS,BFBA5A553FD9E28A,10g
Oracle,3,DPF,DPFPASS,E53F7C782FAA6898,DPF is an account  of Computer and Information Services from the University of Missouri-Rolla.
Oracle,3,DSGATEWAY,<UNKNOWN>,,DSGATEWAY is an account for Oracle Syndication Server.
Oracle,3,DSGATEWAY,DSGATEWAY,6869F3CFD027983A,DSGATEWAY is an account for Oracle Syndication Server.
Oracle,3,DSSYS,DSSYS,E3B6E6006B3A99E0,DSSYS is an account for Oracle Dynamic Services/Web Services.
Oracle,3,DTSP,DTSP,5A40D4065B3673D2,
Oracle,2,EAA,EAA,A410B2C5A0958CDF,EAA is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,EAM,EAM,CE8234D92FCFB563,EAM is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,EARLYWATCH,SUPPORT,8AA1C62E08C76445,
Oracle,3,EAST,EAST,C5D5C455A1DE5F4D,
Oracle,2,EC,EC,6A066C462B62DD46,EC is a schema account from Oracle Applications. Default it has several ANY privs, amongst which ALTER ANY PROCEDURE.
Oracle,2,ECX,ECX,0A30645183812087,ECX is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,EJB,EJB,69CB07E2162C6C93,
Oracle,3,EJSADMIN,EJSADMIN,4C59B97125B6641A,
Oracle,3,EJSADMIN,EJSADMIN_PASSWORD,313F9DFD92922CD2,
Oracle,3,EMP,EMP,B40C23C6E2B4EA3D,EMP is an training account (I think). It should not be on production environments.
Oracle,2,ENG,ENG,4553A3B443FB3207,ENG is a schema account from Oracle Applications. Default it has several ANY privs, amongst which ALTER ANY PROCEDURE.
Oracle,2,ENI,ENI,05A92C0958AFBCBC,ENI is a schema account from Oracle Applications. Default it has several ANY privs, amongst which ALTER ANY PROCEDURE.
Oracle,3,ESTOREUSER,ESTORE,51063C47AC2628D4,ESTOREUSER is an administration account for WebSphere.
Oracle,3,EVENT,EVENT,7CA0A42DA768F96D,EVENT is an administration account for Oracle Discoverer.
Oracle,2,EVM,EVM,137CEDC20DE69F71,EMV is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,EXAMPLE,EXAMPLE,637417B1DC47C2E5,
Oracle,2,EXFSYS,EXFSYS,66F4EF5650C20355,
Oracle,3,EXTDEMO,EXTDEMO,BAEF9D34973EE4EC,9ir2
Oracle,3,EXTDEMO2,EXTDEMO2,6A10DD2DB23880CB,9ir2
Oracle,2,FA,FA,21A837D0AED8F8E5,FA is a schema account from Oracle Applications. Default it has several ANY privs, amongst which ALTER ANY PROCEDURE.
Oracle,2,FEM,FEM,BD63D79ADF5262E7,FEM is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,FII,FII,CF39DE29C08F71B9,FII is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,FINANCE,FINANCE,6CBBF17292A1B9AA,FINANCE is a schema account for Oracle Financials.
Oracle,3,FINPROD,FINPROD,8E2713F53A3D69D5,OraSecurityChk.exe
Oracle,2,FLM,FLM,CEE2C4B59E7567A3,FLM is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,FND,FND,0C0832F8B6897321,FND is an account for Oracle Applications, the Financials (?) package.
Oracle,3,FOO,BAR,707156934A6318D4,9ir2
Oracle,2,FPT,FPT,73E3EC9C0D1FAECF,FPT is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,FRM,FRM,9A2A7E2EBE6E4F71,FRM is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,FROSTY,SNOWMAN,2ED539F71B4AA697,FROSTY seems to be some kind of test account from a guide to install Oracle on RedHat. This account should not be on production.
Oracle,2,FTE,FTE,2FB4D2C9BAE2CCCA,FTE is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,FV,FV,907D70C0891A85B1,FV is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,GL,GL,CD6E99DACE4EA3A6,GL is the schema account of the General Ledger module of the Oracle E-Business suite.
Oracle,2,GMA,GMA,DC7948E807DFE242,GMA is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,GMD,GMD,E269165256F22F01,GMD is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,GME,GME,B2F0E221F45A228F,GME is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,GMF,GMF,A07F1956E3E468E1,GMF is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,GMI,GMI,82542940B0CF9C16,GMI is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,GML,GML,5F1869AD455BBA73,GML is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,GMP,GMP,450793ACFCC7B58E,GMP is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,GMS,GMS,E654261035504804,GMS is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,GPFD,GPFD,BA787E988F8BC424,GPFD is an account of an unknown 3rd party product
Oracle,3,GPLD,GPLD,9D561E4D6585824B,GPFD is an account of an unknown 3rd party product
Oracle,2,GR,GR,F5AB0AA3197AEE42,GR is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,HADES,HADES,2485287AC1DB6756,
Oracle,3,HCPARK,HCPARK,3DE1EBA32154C56B,GPFD is an account of an unknown 3rd party product
Oracle,3,HLW,HLW,855296220C095810,HLW seems to be part of a 9iAS demo. It should not be on a production environment then.
Oracle,3,HR,UNKNOWN,6E0C251EABE4EBB8,
Oracle,2,ABM,ABM,D0F2982F121C7840,ABM is an account from Oracle Applications. It has, amongst others, CREATE DATABASE LINK privileges.
Oracle,4,ADAMS,WOOD,72CDEF4A3483F60D,This is a training account. It should not be available in a production environment.
Oracle,3,ADLDEMO,ADLDEMO,147215F51929A6E8,This is an account to demonstrate using LOBs in VBA code. It should not be installed in a production environment.
Oracle,3,ADMIN,JETSPEED,CAC22318F162D597,ADMIN is an administration account of Apache Jetspeed.
Oracle,3,ADMIN,WELCOME,B8B15AC9A946886A,ADMIN is a generally used accountname to administer a product (like Apache Jetspeed).
Oracle,3,ADMINISTRATOR,ADMIN,F9ED601D936158BD,ADMINISTRATOR is a commonly used name for management accounts for applications.
Oracle,3,ADMINISTRATOR,ADMINISTRATOR,1848F0A31D1C5C62,ADMINISTRATOR is a commonly used name for management accounts for applications.
Oracle,3,AHL,AHL,7910AE63C9F7EEEE,Oracle Applications
Oracle,3,AHM,AHM,33C2E27CF5E401A4,Oracle Applications
Oracle,2,AK,AK,8FCB78BBA8A59515,AK is a schema account from Oracle Applications. Default it has many ANY privileges, amongst which ALTER ANY PROCEDURE.
Oracle,3,ALHRO,XXX,049B2397FB1A419E,ALHRO is an unknown account.
Oracle,3,ALHRW,XXX,B064872E7F344CAE,ALHRW is an unknown account.
Oracle,3,ALR,ALR,BE89B24F9F8231A9,Oracle Applications
Oracle,2,AMS,AMS,BD821F59270E5F34,AMS is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,AMV,AMV,38BC87EB334A1AC4,AMV is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,4,ANDY,SWORDFISH,B8527562E504BC3F,This is a training account. It should not be available in a production environment.
Oracle,3,ANONYMOUS,ANONYMOUS,FE0E8CE7C92504E9,Usually it is not a good idea to have anonymous access to a database.
Oracle,3,ANONYMOUS,<INVALID>,Anonymous,Set by values
Oracle,3,AP,AP,EED09A552944B6AD,AP is an account for Oracle Applications, specifically Account Payable.
Oracle,3,APPLMGR,APPLMGR,CB562C240E871070,
Oracle,3,APPLSYS,APPLSYS,FE84888987A6BF5A,APPLSYS is an administration account for Oracle Applications. It controls the Concurrent Manager.
Oracle,3,APPLSYS,APPS,E153FFF4DAE6C9F7,
Oracle,3,APPLSYS,FND,0F886772980B8C79,APPLSYS is an administration account for Oracle Applications. It controls the Concurrent Manager.
Oracle,3,APPLSYSPUB,APPLSYSPUB,D5DB40BB03EA1270,
Oracle,3,APPLSYSPUB,PUB,D2E3EF40EE87221E,
Oracle,3,APPLSYSPUB,FNDPUB,78194639B5C3DF9F,
Oracle,3,APPLYSYSPUB,FNDPUB,78194639B5C3DF9F,APPLYSYSPUB is an account for Oracle Applications. It has UNLIMITED TABLESPACE.
Oracle,3,APPLYSYSPUB,PUB,A5E09E84EC486FC9,APPLYSYSPUB is an account for Oracle Applications. It has UNLIMITED TABLESPACE.
Oracle,3,APPLYSYSPUB,<UNKNOWN>,D2E3EF40EE87221E,
Oracle,1,APPS,APPS,D728438E8A5925E0,APPS is an often used name for management or schema accounts for applications. In Oracle Applications it is a schema owner and has DBA-like privileges.
Oracle,1,APPS_MRC,APPS,2FFDCBB4FD11D9DC,APPS_MRC is a schema account from Oracle Applications. It has DBA-like privileges.
Oracle,3,APPUSER,APPPASSWORD,7E2C3C2D4BF4071B,APPUSER is an often used name for an application account for users.
Oracle,3,AQ,AQ,2B0C31040A1CFB48,AQ is an account to manage Oracle Advanced Queuing, a messaging system.
Oracle,3,AQDEMO,AQDEMO,5140E342712061DD,AQDEMO is an account to demonstrate Oracle Advanced Queuing, a messaging system.
Oracle,3,AQJAVA,AQJAVA,8765D2543274B42E,AQJAVA is an account of Oracle Advanced Queuing, a messaging system.
Oracle,3,AQUSER,AQUSER,4CF13BDAC1D7511C,AQ is an account to use Oracle Advanced Queuing, a messaging system.
Oracle,2,AR,AR,BBBFE175688DED7E,AR is a schema account from Oracle Applications. Default it has several ANY privs, amongst which ALTER ANY PROCEDURE.
Oracle,3,ASF,ASF,B6FD427D08619EEE,ASF is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,ASG,ASG,1EF8D8BD87CF16BE,ASG is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,ASL,ASL,03B20D2C323D0BFE,ASL is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,ASO,ASO,F712D80109E3C9D8,ASO is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,ASP,ASP,CF95D2C6C85FF513,Oracle Applications
Oracle,3,AST,AST,F13FF949563EAB3C,AST is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,ATM,SAMPLEATM,7B83A0860CF3CB71,9iR2 default account
Oracle,3,AUDIOUSER,AUDIOUSER,CB4F2CEC5A352488,AUDIOUSER is the account to manage the Intermedia Audio option.
Oracle,3,AURORA$JIS$UTILITY$,<INVALID>,INVALID_ENCRYPTED_PASSWORD,AURORA$JIS$UTILITY$ is an internal account of Jserver. In 8i changing the password will prevent ORB from working.
Oracle,3,AURORA$JIS$UTILITY$,INVALID,E1BAE6D95AA95F1E,AURORA$JIS$UTILITY$ is an internal account of Jserver. In 8i changing the password will prevent ORB from working.
Oracle,3,AURORA$ORB$UNAUTHENTICATED,INVALID,80C099F0EADF877E,AURORA$ORB$UNAUTHENTICATED is an internal account of Jserver. In 8i changing the password will prevent ORB from working.
Oracle,3,AURORA$ORB$UNAUTHENTICATED,<INVALID>,INVALID_ENCRYPTED_PASSWORD,
Oracle,3,AX,AX,0A8303530E86FCDD,AX is a schema account from Oracle Applications. Default it has several ANY privs, amongst which ALTER ANY PROCEDURE.
Oracle,3,AZ,AZ,AAA18B5D51B0D5AC,AZ is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,BC4J,BC4J,EAA333E83BF2810D,BC4J is the account to manage the Bussiness Components for Java.
Oracle,2,BEN,BEN,9671866348E03616,BEN is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,BIC,BIC,E84CC95CBBAC1B67,BIC is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,BIL,BIL,BF24BCE2409BE1F7,BIL is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,BIM,BIM,6026F9A8A54B9468,BIM is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,BIS,BIS,7E9901882E5F3565,BIS is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,BIV,BIV,2564B34BE50C2524,Oracle Applications
Oracle,2,BIX,BIX,3DD36935EAEDE2E3,BIX is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,4,BLAKE,PAPER,9435F2E60569158E,This is a training account. It should not be available in a production environment.
Oracle,3,BLEWIS,BLEWIS,C9B597D7361EE067,BLEWIS is a schema owner of  Workflow Iasdb
Oracle,2,BOM,BOM,56DB3E89EAE5788E,BOM is a schema account from Oracle Applications. Default it has several ANY privs, amongst which ALTER ANY PROCEDURE.
Oracle,1,SYSMAN,SYSMAN,447B729161192C24,SYSMAN is the management account for Oracle Enterprise Mananger. It is used as access to all databases that are managed by it. It might be possible to access a data in your databases.
Oracle,2,SYSTEM,CHANGE_ON_INSTALL,8BF0DA8E551DE1B9,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYSTEM,D_SYSPW,1B9F1F9A5CB9EB31,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYSTEM,MANAGER,D4DF7931AB130E37,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYSTEM,ORACLE,2D594E86F93B17A1,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYSTEM,SYSTEMPASS,4861C2264FB17936,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYSTEM,SYSTEM,970BAA5B81930A40,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYSTEM,MANAG3R,135176FFB5BA07C9,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYSTEM,ORACL3,E4519FCD3A565446,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYSTEM,0RACLE,66A490AEAA61FF72,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYSTEM,0RACL3,10B0C2DA37E11872,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYSTEM,ORACLE8,D5DD57A09A63AA38,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYSTEM,ORACLE9,69C27FA786BA774C,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYSTEM,ORACLE9I,86FDB286770CD4B9,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYSTEM,0RACLE9I,B171042374D7E6A2,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYSTEM,0RACL39I,D7C18B3B3F2A4D4B,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,3,TAHITI,TAHITI,F339612C73D27861,
Oracle,3,TALBOT,MT6CH5,905475E949CF2703,
Oracle,3,TDOS_ICSAP,TDOS_ICSAP,7C0900F751723768,
Oracle,3,TEC,TECTEC,9699CFD34358A7A7,
Oracle,3,TEST,PASSWD,26ED9DD4450DD33C,
Oracle,3,TEST,TEST,7A0F2B316C212D67,
Oracle,3,TEST_USER,TEST_USER,C0A0F776EBBBB7FB,
Oracle,3,TESTPILOT,TESTPILOT,DE5B73C964C7B67D,
Oracle,3,THINSAMPLE,THINSAMPLEPW,5DCD6E2E26D33A6E,9iR2 documenation
Oracle,3,TIBCO,TIBCO,ED4CDE954630FA82,
Oracle,3,TIP37,TIP37,B516D9A33679F56B,
Oracle,3,TRACESVR,TRACE,F9DA8977092B7B81,TRACESVR is required for Oracle trace (otrace), which is generally not used in many organizations. If not used, you might want to lock it.
Oracle,3,TRAVEL,TRAVEL,97FD0AE6DFF0F5FE,
Oracle,3,TSDEV,TSDEV,29268859446F5A8C,
Oracle,3,TSUSER,TSUSER,90C4F894E2972F08,
Oracle,3,TURBINE,TURBINE,76F373437F33F347,
Oracle,3,UDDISYS,<UNKNOWN>,,UDDISYS is an administrative account of Oracle9iAS Web Services.
Oracle,3,ULTIMATE,ULTIMATE,4C3F880EFA364016,
Oracle,3,UM_ADMIN,UM_ADMIN,F4F306B7AEB5B6FC,
Oracle,3,UM_CLIENT,UM_CLIENT,82E7FF841BFEAB6C,
Oracle,3,USER,USER,74085BE8A9CF16B4,
Oracle,3,USER_NAME,PASSWORD,96AE343CA71895DA,
Oracle,3,USER0,USER0,8A0760E2710AB0B4,
Oracle,3,USER1,USER1,BBE7786A584F9103,
Oracle,3,USER2,USER2,1718E5DBB8F89784,
Oracle,3,USER3,USER3,94152F9F5B35B103,
Oracle,3,USER4,USER4,2907B1BFA9DA5091,
Oracle,3,USER5,USER5,6E97FCEA92BAA4CB,
Oracle,3,USER6,USER6,F73E1A76B1E57F3D,
Oracle,3,USER7,USER7,3E9C94488C1A3908,
Oracle,3,USER8,USER8,D148049C2780B869,
Oracle,3,USER9,USER9,0487AFEE55ECEE66,
Oracle,3,UTILITY,UTILITY,81F2423D6811246D,-
Oracle,3,USUARIO,CLAVE,1AB4E5FD2217F7AA,9iR2 documentation
Oracle,3,UTLBSTATU,UTLESTAT,C42D1FA3231AB025,
Oracle,2,VEA,VEA,D38D161C22345902,VEA is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,VEH,VEH,72A90A786AAE2914,VEH is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,VERTEX_LOGIN,VERTEX_LOGIN,DEF637F1D23C0C59,
Oracle,3,VIDEOUSER,VIDEOUSER,29ECA1F239B0F7DF,
Oracle,3,VIF_DEVELOPER,VIF_DEV_PWD,9A7DCB0C1D84C488,
Oracle,3,VIRUSER,VIRUSER,404B03707BF5CEA3,
Oracle,3,VPD_ADMIN,AKF7D98S2,571A7090023BCD04,
Oracle,3,VRR1,VRR1,811C49394C921D66,
Oracle,3,VRR1,VRR2,3D703795F61E3A9A,
Oracle,3,VRR1,UNKNOWN,3DA1893A5FCA23BF,
Oracle,3,WEBCAL01,WEBCAL01,C69573E9DEC14D50,
Oracle,3,WEBDB,WEBDB,D4C4DCDD41B05A5D,
Oracle,3,WEBREAD,WEBREAD,F8841A7B16302DE6,
Oracle,3,WEBSYS,MANAGER,A97282CE3D94E29E,
Oracle,3,WEBUSER,YOUR_PASS,FD0C7DB4C69FA642,
Oracle,3,WEST,WEST,DD58348364219102,
Oracle,3,WFADMIN,WFADMIN,C909E4F104002876,
Oracle,2,WH,WH,91792EFFCB2464F9,WH is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,WIP,WIP,D326D25AE0A0355C,WIP is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,WIRELESS,<UNKNOWN>,,WIRELESS is an administrative account of Oracle 9iAS Wireless
Oracle,3,WKADMIN,WKADMIN,888203D36F64C5F6,WFADMIN is an administrative account of Oracle9iAS WorkFlow.
Oracle,3,WKPROXY,WKPROXY,AA3CB2A4D9188DDB,10g
Oracle,3,WKPROXY,CHANGE_ON_INSTALL,B97545C4DD2ABE54,WKPROXY is an administrative account of Oracle9iAS Ultrasearch.
Oracle,3,WKSYS,CHANGE_ON_INSTALL,69ED49EE1851900D,WKSYS is an administrative account of Oracle9iAS Ultrasearch.
Oracle,3,WKPROXY,UNKNOWN,18F0B0E50B9F7B12,
Oracle,3,WKSYS,WKSYS,545E13456B7DDEA0,WKSYS is an administrative account of Oracle9iAS Ultrasearch.
Oracle,3,WKUSER,WKUSER,8B104568E259B370,WKUSER is a user account of Oracle9iAS Ultrasearch.
Oracle,3,WK_SYS,<UNKNOWN>,79DF7A1BD138CF11,
Oracle,3,WK_TEST,WK_TEST,29802572EB547DBF,10g
Oracle,3,WK_PROXY,<UNKNOWN>,3F9FBD883D787341,10g
Oracle,2,WMS,WMS,D7837F182995E381,WMS is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,WMSYS,WMSYS,7C9BA362F8314299,
Oracle,3,WOB,WOB,D27FA6297C0313F4,
Oracle,2,WPS,WPS,50D22B9D18547CF7,WPS is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,WSH,WSH,D4D76D217B02BD7A,WSH is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,WSM,WSM,750F2B109F49CC13,WSM is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,WWW,WWW,6DE993A60BC8DBBF,
Oracle,3,WWWUSER,WWWUSER,F239A50072154BAC,
Oracle,3,XADEMO,XADEMO,ADBC95D8DCC69E66,
Oracle,3,XDB,CHANGE_ON_INSTALL,88D8364765FCE6AF,
Oracle,2,XDP,XDP,F05E53C662835FA2,XDP is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,XLA,XLA,2A8ED59E27D86D41,XLA is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,XNC,XNC,BD8EA41168F6C664,XNC is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,XNI,XNI,F55561567EF71890,Oracle Applications
Oracle,2,XNM,XNM,92776EA17B8B5555,XNM is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,XNP,XNP,3D1FB783F96D1F5E,XNP is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,XNS,XNS,FABA49C38150455E,XNS is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,XPRT,XPRT,0D5C9EFC2DFE52BA,
Oracle,2,XTR,XTR,A43EE9629FA90CAE,XTR is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,MDDEMO_MGR,MGR,B41BCD9D3737F5C4,
Oracle,1,SYSTEM,D_SYSTPW,4438308EE0CAFB7F,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYSTEM,ORACLE8I,FAAD7ADAF48B5F45,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYSTEM,0RACLE8,685657E9DC29E185,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYSTEM,0RACLE9,49B70B505DF0247F,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYSTEM,0RACLE8I,B49C4279EBD8D1A8,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYSTEM,0RACL38,604101D3AACE7E88,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYSTEM,0RACL39,02AB2DB93C952A8F,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYSTEM,0RACL38I,203CD8CF183E716C,SYSTEM is Oracles database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYS,0RACLE8,1FA22316B703EBDD,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYS,0RACLE9,12CFB5AE1D087BA3,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYS,0RACLE8I,380E3D3AD5CE32D4,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYS,0RACL38,2563EFAAE44E785A,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYS,0RACL39,E7686462E8CD2F5E,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYS,0RACL38I,691C5E7E424B821A,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,3,ORDPLUGINS,ORDPLUGINS,88A2B2C183431F00,ORDPLUGINS is an administrative account for Oracle Time Series.
Oracle,2,ORDSYS,ORDSYS,7EFA02EC7EA6B86F,The account ORDSYS (Oracle Time Series) has a limited number of risky system privileges, amongst which those to use external libraries and run code on the operating system.
Oracle,3,OSE$HTTP$ADMIN,Invalid password,INVALID_ENCRYPTED_PASSWORD,OSE$HTTP$ADMIN is an internal account of Jserver. In 8i changing the password will prevent ORB from working.
Oracle,3,OSE$HTTP$ADMIN,INVALID,05327CD9F6114E21,OSE$HTTP$ADMIN is an internal account of Jserver. In 8i changing the password will prevent ORB from working.
Oracle,2,OSM,OSM,106AE118841A5D8C,OSM is a schema account from Oracle Applications. Default it has several ANY privs, amongst which ALTER ANY PROCEDURE.
Oracle,3,OSP22,OSP22,C04057049DF974C2,
Oracle,3,OSSAQ_HOST,<UNKNOWN>,,OSSAQ_HOST is an administrative account of Oracle9iAS Syndication Server.
Oracle,3,OSSAQ_PUB,<UNKNOWN>,,OSSAQ_PUB is a public account of Oracle9iAS Syndication Server.
Oracle,3,OSSAQ_SUB,<UNKNOWN>,,OSSAQ_SUB is an administrative account of Oracle9iAS Syndication Server.
Oracle,2,OTA,OTA,F5E498AC7009A217,OTA is a schema account from Oracle Applications. Default it has several ANY privs, amongst which ALTER ANY PROCEDURE.
Oracle,2,OUTLN,OUTLN,4A3BA55E08595C81,Often neglected, the OUTLN account has EXECUTE ANY PROCEDURE permission. On 8i it can become admin by using dbms_repcat_admin.
Oracle,3,OWA,OWA,CA5D67CD878AFC49,
Oracle,3,OWA_PUBLIC,OWA_PUBLIC,0D9EC1D1F2A37657,
Oracle,3,OWF_MGR,<UNKNOWN>,,OWF_MGR is the schema owner of Oracle Workflow Manager.
Oracle,3,OWF_MGR,OWF_MGR,3CBED37697EB01D1,OWF_MGR is the schema owner of Oracle Workflow Manager.
Oracle,3,OWNER,OWNER,5C3546B4F9165300,
Oracle,2,OZF,OZF,970B962D942D0C75,OZF is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,OZP,OZP,B650B1BB35E86863,OZP is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,OZS,OZS,0DABFF67E0D33623,OZS is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,PA,PA,8CE2703752DB36D8,PA is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,PANAMA,PANAMA,3E7B4116043BEAFF,
Oracle,3,PATROL,PATROL,0478B8F047DECC65,
Oracle,3,PAUL,PAUL,35EC0362643ADD3F,Book
Oracle,3,PERFSTAT,PERFSTAT,AC98877DE1297365,PERFSTAT is an account of Oracles statistics package Statspack. PERFSTAT probably has permissions to see the data dictionary.
Oracle,3,PERSTAT,PERSTAT,A68F56FBBCDC04AB,PERFSTAT is an account of Oracles statistics package Statspack. PERFSTAT probably has permissions to see the data dictionary.
Oracle,2,PJM,PJM,021B05DBB892D11F,PJM is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,PLANNING,PLANNING,71B5C2271B7CFF18,
Oracle,3,PLEX,PLEX,99355BF0E53FF635,
Oracle,3,PLSQL,SUPERSECRET,C4522E109BCF69D0,
Oracle,3,PM,CHANGE_ON_INSTALL,72E382A52E89575A,This is a training account. It should not be available in a production environment.
Oracle,3,PM,UNKNOWN,F67E035BF8352CB4,
Oracle,3,PM,PM,C7A235E6D2AF6018,This is a training account. It should not be available in a production environment.
Oracle,2,PMI,PMI,A7F7978B21A6F65E,PMI is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,PN,PN,D40D0FEF9C8DC624,PN is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,1,PO,PO,355CBEC355C10FEF,PO is an possibly account with DBA privileges, which allow to read, change and destroy all data in your database.
Oracle,3,PO7,PO7,6B870AF28F711204,
Oracle,3,PO8,PO8,7E15FBACA7CDEBEC,
Oracle,2,POA,POA,2AB40F104D8517A0,POA is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,POM,POM,123CF56E05D4EF3C,POM is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,PORTAL,<UNKNOWN>,,
Oracle,3,PORTAL_APP,<UNKNOWN>,,
Oracle,3,PORTAL_DEMO,<UNKNOWN>,,
Oracle,3,PORTAL_DEMO,PORTAL_DEMO,A0A3A6A577A931A3,
Oracle,3,PORTAL_PUBLIC,<UNKNOWN>,,
Oracle,3,PORTAL_SSO_PS,PORTAL_SSO_PS,D1FB757B6E3D8E2F,
Oracle,3,PORTAL30,PORTAL30,969F9C3839672C6D,PORTAL30 is the schema owner of Oracle Portal.
Oracle,3,PORTAL30,PORTAL31,D373ABE86992BE68,PORTAL31 is the schema owner of Oracle Portal.
Oracle,3,PORTAL30_ADMIN,PORTAL30_ADMIN,7AF870D89CABF1C7,PORTAL30_ADMIN is the administration account of Oracle Portal.
Oracle,3,PORTAL30_DEMO,PORTAL30_DEMO,CFD1302A7F832068,
Oracle,3,PORTAL30_PS,PORTAL30_PS,333B8121593F96FB,
Oracle,3,PORTAL30_PUBLIC,PORTAL30_PUBLIC,42068201613CA6E2,
Oracle,3,PORTAL30_SSO,PORTAL30_SSO,882B80B587FCDBC8,PORTAL30_SSO is the schema owner of Oracle Portal Single-Sign on
Oracle,3,PORTAL30_SSO_ADMIN,PORTAL30_SSO_ADMIN,BDE248D4CCCD015D,PORTAL30_SSO is the admin account of Oracle Portal Single-Sign on
Oracle,3,PORTAL30_SSO_PS,PORTAL30_SSO_PS,F2C3DC8003BC90F8,
Oracle,3,PORTAL30_SSO_PUBLIC,PORTAL30_SSO_PUBLIC,98741BDA2AC7FFB2,PORTAL30_SSO is the public account for Oracle Portal Single-Sign on
Oracle,3,POS,POS,6F6675F272217CF7,Oracle Applications
Oracle,3,POWERCARTUSER,POWERCARTUSER,2C5ECE3BEC35CE69,
Oracle,3,PRIMARY,PRIMARY,70C3248DFFB90152,
Oracle,2,PSA,PSA,FF4B266F9E61F911,PSA is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,PSB,PSB,28EE1E024FC55E66,PSB is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,PSP,PSP,4FE07360D435E2F0,PSP is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,1,PUBSUB,PUBSUB,80294AE45A46E77B,PUBSUB is an account with DBA privileges, which allow to read, change and destroy all data in your database.
Oracle,3,PUBSUB1,PUBSUB1,D6DF5BBC8B64933E,
Oracle,2,PV,PV,76224BCC80895D3D,PV is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,QA,QA,C7AEAA2D59EB1EAE,QA is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,QDBA,QDBA,AE62CB8167819595,
Oracle,2,QP,QP,10A40A72991DCA15,QP is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,QS,CHANGE_ON_INSTALL,8B09C6075BDF2DC4,This is a training account. It should not be available in a production environment.
Oracle,3,QS,QS,4603BCD2744BDE4F,This is a training account. It should not be available in a production environment.
Oracle,3,QS,UNKNOWN,ACBD635B3A25405D,
Oracle,3,QS_ADM,CHANGE_ON_INSTALL,991CDDAD5C5C32CA,This is a training account. It should not be available in a production environment.
Oracle,3,QS_ADM,QS_ADM,3990FB418162F2A0,This is a training account. It should not be available in a production environment.
Oracle,3,QS_ADM,UNKNOWN,BB424460EFEC9080,
Oracle,3,QS_CB,CHANGE_ON_INSTALL,CF9CFACF5AE24964,This is a training account. It should not be available in a production environment.
Oracle,3,QS_CB,QS_CB,870C36D8E6CD7CF5,This is a training account. It should not be available in a production environment.
Oracle,3,QS_CB,UNKNOWN,A2A1265A6BDC8F36,
Oracle,3,QS_CBADM,CHANGE_ON_INSTALL,7C632AFB71F8D305,This is a training account. It should not be available in a production environment.
Oracle,3,QS_CBADM,QS_CBADM,20E788F9D4F1D92C,This is a training account. It should not be available in a production environment.
Oracle,3,QS_CBADM,UNKNOWN,58C823BA7A2D3D7F,
Oracle,3,QS_CS,CHANGE_ON_INSTALL,91A00922D8C0F146,This is a training account. It should not be available in a production environment.
Oracle,3,QS_CS,QS_CS,2CA6D0FC25128CF3,This is a training account. It should not be available in a production environment.
Oracle,3,QS_CS,UNKNOWN,5D85C7E8FB28375F,
Oracle,3,QS_ES,CHANGE_ON_INSTALL,E6A6FA4BB042E3C2,This is a training account. It should not be available in a production environment.
Oracle,3,QS_ES,QS_ES,9A5F2D9F5D1A9EF4,This is a training account. It should not be available in a production environment.
Oracle,3,QS_ES,UNKNOWN,723007181C44715C,
Oracle,3,QS_OS,CHANGE_ON_INSTALL,FF09F3EB14AE5C26,This is a training account. It should not be available in a production environment.
Oracle,3,QS_OS,QS_OS,0EF5997DC2638A61,This is a training account. It should not be available in a production environment.
Oracle,3,QS_OS,UNKNOWN,7ABBCF4BEB7854B2,
Oracle,3,QS_WS,CHANGE_ON_INSTALL,24ACF617DD7D8F2F,This is a training account. It should not be available in a production environment.
Oracle,3,QS_WS,QS_WS,0447F2F756B4F460,This is a training account. It should not be available in a production environment.
Oracle,3,QS_WS,UNKNOWN,8CF13718CDC81090,
Oracle,3,RE,RE,933B9A9475E882A6,
Oracle,3,REP_MANAGER,DEMO,2D4B13A8416073A1,
Oracle,3,REP_OWNER,DEMO,88D8F06915B1FE30,
Oracle,3,REP_OWNER,REP_OWNER,BD99EC2DD84E3B5C,
Oracle,3,REP_USER,DEMO,57F2A93832685ADB,
Oracle,3,REPADMIN,REPADMIN,915C93F34954F5F8,
Oracle,3,REPORTS_USER,OEM_TEMP,635074B4416CD3AC,
Oracle,3,REPORTS,REPORTS,0D9D14FE6653CF69,n/a
Oracle,2,RG,RG,0FAA06DA0F42F21F,RG is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,RHX,RHX,FFDF6A0C8C96E676,RHX is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,RLA,RLA,C1959B03F36C9BB2,RLA is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,2,RLM,RLM,4B16ACDA351B557D,RLM is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,RMAIL,RMAIL,DA4435BBF8CAE54C,
Oracle,2,RMAN,RMAN,E7B5D92911C831E1,RMAN is an account for the Oracle Recovery Manager. This account might be misused to write unwanted changes to the database to the backups.
Oracle,3,RRS,RRS,5CA8F5380C959CA9,
Oracle,1,SAMPLE,SAMPLE,E74B15A3F7A19CA8,SAMPLE is possibly an account with DBA privileges, which allow to read, change and destroy all data in your database.
Oracle,3,SAP,SAPR3,BEAA1036A464F9F0,This is a SAP application user ID.
Oracle,3,SAP,06071992,B1344DC1B5F3D903,This is a SAP application user ID.
Oracle,3,SAPR3,SAP,58872B4319A76363,SAPR3 is the administration account (and schema?) of SAP R/3
Oracle,3,SCOTT,TIGER,F894844C34402B67,This is a training account. It should not be available in a production environment.
Oracle,3,SCOTT,TIGGER,7AA1A84E31ED7771,This is a training account. It should not be available in a production environment.
Oracle,3,SDOS_ICSAP,SDOS_ICSAP,C789210ACC24DA16,
Oracle,3,SECDEMO,SECDEMO,009BBE8142502E10,
Oracle,3,SERVICECONSUMER1,SERVICECONSUMER1,183AC2094A6BD59F,
Oracle,3,SH,CHANGE_ON_INSTALL,9793B3777CD3BD1A,This is a training account. It should not be available in a production environment.
Oracle,3,SH,SH,54B253CBBAAA8C48,This is a training account. It should not be available in a production environment.
Oracle,3,SH,UNKNOWN,1729F80C5FA78841,
Oracle,3,SITEMINDER,SITEMINDER,061354246A45BBAB,
Oracle,3,SI_INFORMTN_SCHEMA,SI_INFORMTN_SCHEMA,84B8CBCA4D477FA3,10g
Oracle,3,SLIDE,SLIDEPW,FDFE8B904875643D,
Oracle,3,SPIERSON,SPIERSON,4A0A55000357BB3E,SPIERSON is a schema owner of  Workflow Iasdb
Oracle,2,SSP,SSP,87470D6CE203FB4D,SSP is a schema account from Oracle Applications. Default it has several CREATE privileges.
Oracle,3,STARTER,STARTER,6658C384B8D63B0A,
Oracle,3,STRAT_USER,STRAT_PASSWD,AEBEDBB4EFB5225B,
Oracle,3,SWPRO,SWPRO,4CB05AA42D8E3A47,
Oracle,3,SWUSER,SWUSER,783E58C29D2FC7E1,
Oracle,3,SYMPA,SYMPA,E7683741B91AF226,
Oracle,1,SYS,CHANGE_ON_INSTALL,D4C5016086B2DC6A,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYS,D_SYSPW,43BE121A2A135FF3,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,2,SYS,MANAGER,5638228DAF52805F,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYS,ORACLE,8A8F025737A9097A,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYS,SYS,4DE42795E66117AE,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYS,SYSPASS,66BC3FF56063CE97,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYS,MANAG3R,57D7CFA12BB5BABF,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYS,ORACL3,A9A57E819B32A03D,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYS,0RACLE,2905ECA56A830226,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYS,0RACL3,64074AF827F4B74A,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYS,ORACLE8,41B328CA13F70713,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYS,ORACLE9,0B4409DDD5688913,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYS,ORACLE8I,6CFF570939041278,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYS,ORACLE9I,3522F32DD32A9706,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYS,0RACLE9I,BE29E31B2B0EDA33,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,1,SYS,0RACL39I,5AC333703DE0DBD4,SYS is Oracles most powerful database management account. It allows to read, change and destroy all data in your database.
Oracle,3,SYSADM,SYSADM,BA3E855E93B5B9B0,
Oracle,3,SYSADMIN,<UNKNOWN>,,SYSADMIN is the schema owner of Oracle Workflow Manager.
Oracle,3,SYSADMIN,SYSADMIN,DC86E8DEAA619C1A,SYSADMIN is the schema owner of Oracle Workflow Manager.
Oracle,1,SYSMAN,OEM_TEMP,639C32A115D2CA57,SYSMAN is the management account for Oracle Enterprise Mananger. It is used as access to all databases that are managed by it. It might be possible to access a data in your databases.

